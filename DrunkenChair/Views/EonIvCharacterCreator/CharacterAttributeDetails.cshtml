@model Niklasson.DrunkenChair.Models.CharacterAttributeDetails

@using Niklasson.DrunkenChair.Extensions
@using Finley.Common

@{
    ViewBag.Title = "Karaktärsgrunder";
    var dices = Model.DicesToDistribute;
    var max = Model.MaxDicesPerAttribute;

    object labelHtmlAttributes = new { @class = "control-label col-md-2" };

    object diceHtmlAttributes = new
        {
            @class = "form-control attribute-spinner",
            @onkeydown = "return false",
            @min = "0",
            @max = "5",
            @style = "color: transparent; text-shadow: 0 0 0 gray;"
        };
    
    var test = new Dictionary<string, string>();
    test.Add("class", "form-control");
        
    object diceDistributorViewData = new
    {
        htmlAttributes = new
        {
            @class = "form-control",
            @onkeydown = "return false",
            @min = "0",
            @max = "5",
            @style = "color: transparent; text-shadow: 0 0 0 gray;",
            value = "0"
        }
    };
}

<h2>CharacterAttributeDetails</h2>

@using (Html.BeginForm("CharacterAttributeDetails", "EonIvCharacterCreator", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Character Attributes</h4>
        <hr />
        <p>
            Spendera @dices tärningar på attributen, max @max tärningar på ett attribut.
        </p>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.StrenghtBonusDices, htmlAttributes: labelHtmlAttributes)
            @Html.EditorFor(model => Model.StrenghtBonusDices,
            new { htmlAttributes = TypeMerger.MergeTypes(diceHtmlAttributes,
                new { data_onchange_target = "#" + Html.IdFor(model => model.CharacterConstructionSite.Character.Attributes.Strength.UnlimitedDice6) }) })
            <br/>
            @Html.LabelFor(model => Model.StaminaBonusDices, htmlAttributes: labelHtmlAttributes)
            @Html.EditorFor(model => Model.StaminaBonusDices, new
               {
                   htmlAttributes = TypeMerger.MergeTypes(diceHtmlAttributes,
                       new { data_onchange_target = "#" + Html.IdFor(model => model.CharacterConstructionSite.Character.Attributes.Stamina.UnlimitedDice6) })
               })
            <br />
            @Html.LabelFor(model => Model.AgilityBonusDices, htmlAttributes: labelHtmlAttributes)
            @Html.EditorFor(model => Model.AgilityBonusDices, new
               {
                   htmlAttributes = TypeMerger.MergeTypes(diceHtmlAttributes,
                       new { data_onchange_target = "#" + Html.IdFor(model => Model.CharacterConstructionSite.Character.Attributes.Agility.UnlimitedDice6) })
               })

            <br />
            @Html.LabelFor(model => Model.PerceptionBonusDices, htmlAttributes: labelHtmlAttributes)
            @Html.EditorFor(model => Model.PerceptionBonusDices, new
               {
                   htmlAttributes = TypeMerger.MergeTypes(diceHtmlAttributes,
                       new { data_onchange_target = "#" + Html.IdFor(model => Model.CharacterConstructionSite.Character.Attributes.Perception.UnlimitedDice6) })
               })

            <br />
            @Html.LabelFor(model => Model.WillBonusDices, htmlAttributes: labelHtmlAttributes)
            @Html.EditorFor(model => Model.WillBonusDices, new
               {
                   htmlAttributes = TypeMerger.MergeTypes(diceHtmlAttributes,
                       new { data_onchange_target = "#" + Html.IdFor(model => Model.CharacterConstructionSite.Character.Attributes.Will.UnlimitedDice6) })
               })

            <br />
            @Html.LabelFor(model => Model.PsycheBonusDices, htmlAttributes: labelHtmlAttributes)
            @Html.EditorFor(model => Model.PsycheBonusDices, new
               {
                   htmlAttributes = TypeMerger.MergeTypes(diceHtmlAttributes,
                       new { data_onchange_target = "#" + Html.IdFor(model => Model.CharacterConstructionSite.Character.Attributes.Psyche.UnlimitedDice6) })
               })

            <br />
            @Html.LabelFor(model => Model.WisdomBonusDices, htmlAttributes: labelHtmlAttributes)
            @Html.EditorFor(model => Model.WisdomBonusDices, new
               {
                   htmlAttributes = TypeMerger.MergeTypes(diceHtmlAttributes,
                       new { data_onchange_target = "#" + Html.IdFor(model => Model.CharacterConstructionSite.Character.Attributes.Wisdom.UnlimitedDice6) })
               })

            <br />
            @Html.LabelFor(model => Model.CharismaBonusDices, htmlAttributes: labelHtmlAttributes)
            @Html.EditorFor(model => Model.CharismaBonusDices, new
               {
                   htmlAttributes = TypeMerger.MergeTypes(diceHtmlAttributes,
                       new { data_onchange_target = "#" + Html.IdFor(model => Model.CharacterConstructionSite.Character.Attributes.Charisma.UnlimitedDice6) })
               })


        </div>

        <div id="divCharacterPreview">
                @Html.DisplayFor(m => m.CharacterConstructionSite)
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" name="previousButton" value="Previous" class="btn btn-default" />
                <input type="submit" name="nextButton" value="Next" class="btn btn-default" />
            </div>
        </div>
    </div>
    
    
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="@Url.Content("~/js/EonIvCharacters/characterAttributeDetails.js")"></script>

}
