
@model Niklasson.EonIV.Web.Models.CharacterBonusAttributeStepViewModel
@using Niklasson.EonIV.Web.Models

@section AddToHead
{
    <link href="@Url.Content("~/Content/CharacterAttributeDetails.css")" rel="stylesheet" type="text/css" />
}

@{
    ViewBag.Title = "Karaktärsgrunder";
    var dices = Model.DicesLeftToDistribute;
    var max = Model.MaxDicesPerAttribute;

    object labelHtmlAttributes = new { @class = "control-label col-md-2" };

    object diceHtmlAttributes = new
    {
        @class = "form-control attribute-spinner",
        @onkeydown = "return false",
        @min = "0",
        @max = "5",
        data_update_attributes_url = Url.Action("GetDerivedAttributes", "EonIvCharacterCreator")
    };

    object diceDistributorViewData = new
    {
        htmlAttributes = new
        {
            @class = "form-control",
            @onkeydown = "return false",
            @min = "0",
            @max = "5",
            @style = "color: transparent; text-shadow: 0 0 0 gray;",
            value = "0"
        }
    };
}

<h2>CharacterAttributeDetails</h2>

@using (Html.BeginForm("CharacterAttributeDetails", "EonIvCharacterCreator", FormMethod.Post, new { style = "display:inline-block; width:50% float: left", @class = "left-column" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Character Attributes</h4>   
        <hr />  
        <p>
            @Html.ValidationMessageFor(m => m.DicesLeftToDistribute)
            Spendera @Html.DisplayTextFor(m => m.DicesLeftToDistribute)@Html.HiddenFor(m => m.DicesLeftToDistribute) tärningar på attributen, max @max tärningar på ett attribut.
        </p>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.StrengthBonusDices, htmlAttributes: labelHtmlAttributes)
                @Html.EditorFor(model => Model.StrengthBonusDices,
                new { htmlAttributes = TypeMerger.MergeTypes(diceHtmlAttributes,
                    new { data_onchange_target = "#" + Html.IdFor(model => model.Preview.CharacterSheet.Attributes.Strength.UnlimitedDice6) }) })
            </div>
            <br/>
            <div>
                @Html.LabelFor(model => Model.StaminaBonusDices, htmlAttributes: labelHtmlAttributes)
                @Html.EditorFor(model => Model.StaminaBonusDices, new
                   {
                       htmlAttributes = TypeMerger.MergeTypes(diceHtmlAttributes,
                           new { data_onchange_target = "#" + Html.IdFor(model => model.Preview.CharacterSheet.Attributes.Stamina.UnlimitedDice6) })
                   })
            </div>
            <br />
            <div>
                @Html.LabelFor(model => Model.AgilityBonusDices, htmlAttributes: labelHtmlAttributes)
                @Html.EditorFor(model => Model.AgilityBonusDices, new
                   {
                       htmlAttributes = TypeMerger.MergeTypes(diceHtmlAttributes,
                           new { data_onchange_target = "#" + Html.IdFor(model => model.Preview.CharacterSheet.Attributes.Agility.UnlimitedDice6) })
                   })
            </div>
            <br />
            <div>
                @Html.LabelFor(model => Model.PerceptionBonusDices, htmlAttributes: labelHtmlAttributes)
                @Html.EditorFor(model => Model.PerceptionBonusDices, new
               {
                   htmlAttributes = TypeMerger.MergeTypes(diceHtmlAttributes,
                       new { data_onchange_target = "#" + Html.IdFor(model => model.Preview.CharacterSheet.Attributes.Perception.UnlimitedDice6) })
               })
            </div>
            <br />
            <div>
                @Html.LabelFor(model => Model.WillBonusDices, htmlAttributes: labelHtmlAttributes)
                @Html.EditorFor(model => Model.WillBonusDices, new
                   {
                       htmlAttributes = TypeMerger.MergeTypes(diceHtmlAttributes,
                           new { data_onchange_target = "#" + Html.IdFor(model => model.Preview.CharacterSheet.Attributes.Will.UnlimitedDice6) })
                   })
                </div>
            <br />
            <div>
                @Html.LabelFor(model => Model.PsycheBonusDices, htmlAttributes: labelHtmlAttributes)
                @Html.EditorFor(model => Model.PsycheBonusDices, new
                   {
                       htmlAttributes = TypeMerger.MergeTypes(diceHtmlAttributes,
                           new { data_onchange_target = "#" + Html.IdFor(model => model.Preview.CharacterSheet.Attributes.Psyche.UnlimitedDice6) })
                   })
            </div>
            <br />
            <div>
                @Html.LabelFor(model => Model.WisdomBonusDices, htmlAttributes: labelHtmlAttributes)
                @Html.EditorFor(model => Model.WisdomBonusDices, new
                   {
                       htmlAttributes = TypeMerger.MergeTypes(diceHtmlAttributes,
                           new { data_onchange_target = "#" + Html.IdFor(model => model.Preview.CharacterSheet.Attributes.Wisdom.UnlimitedDice6) })
                   })
            </div>
            <br />
            <div>
                @Html.LabelFor(model => Model.CharismaBonusDices, htmlAttributes: labelHtmlAttributes)
                @Html.EditorFor(model => Model.CharismaBonusDices, new
                   {
                       htmlAttributes = TypeMerger.MergeTypes(diceHtmlAttributes,
                           new { data_onchange_target = "#" + Html.IdFor(model => model.Preview.CharacterSheet.Attributes.Charisma.UnlimitedDice6) })
                   })
            </div>


        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" name="previousButton" value="Previous" class="btn btn-default" />
            <input type="submit" name="nextButton" value="Next" class="btn btn-default" />
        </div>
    </div>
}

    <div id="CharacterPreview" class="right-column" style="display: inline; float: right">
        @Html.DisplayFor(m => m.Preview)
    </div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="@Url.Content("~/js/EonIvCharacters/characterAttributeDetails.js")"></script>

}
